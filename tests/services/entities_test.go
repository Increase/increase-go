package services

import (
	"context"
	"errors"
	"net/http/httputil"
	"testing"
	"time"

	"github.com/increase/increase-go"
	"github.com/increase/increase-go/core"
	"github.com/increase/increase-go/options"
	"github.com/increase/increase-go/requests"
)

func TestEntitiesNewWithOptionalParams(t *testing.T) {
	c := increase.NewIncrease(options.WithAPIKey("APIKey"), options.WithBaseURL("http://127.0.0.1:4010"))
	_, err := c.Entities.New(context.TODO(), &requests.CreateAnEntityParameters{Structure: increase.F(requests.CreateAnEntityParametersStructureCorporation), Corporation: increase.F(requests.CreateAnEntityParametersCorporation{Name: increase.F("National Phonograph Company"), Website: increase.F("https://example.com"), TaxIdentifier: increase.F("602214076"), IncorporationState: increase.F("NY"), Address: increase.F(requests.CreateAnEntityParametersCorporationAddress{Line1: increase.F("33 Liberty Street"), Line2: increase.F("x"), City: increase.F("New York"), State: increase.F("NY"), Zip: increase.F("10045")}), BeneficialOwners: increase.F([]requests.CreateAnEntityParametersCorporationBeneficialOwners{{Individual: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividual{Name: increase.F("x"), DateOfBirth: increase.F(time.Now()), Address: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualAddress{Line1: increase.F("x"), Line2: increase.F("x"), City: increase.F("x"), State: increase.F("x"), Zip: increase.F("x")}), ConfirmedNoUsTaxID: increase.F(true), Identification: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentification{Method: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationMethodSocialSecurityNumber), Number: increase.F("xxxx"), Passport: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationPassport{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), Country: increase.F("x")}), DriversLicense: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationDriversLicense{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), State: increase.F("x")}), Other: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationOther{Country: increase.F("x"), Description: increase.F("x"), ExpirationDate: increase.F(time.Now()), FileID: increase.F("string")})})}), CompanyTitle: increase.F("x"), Prong: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersProngOwnership)}, {Individual: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividual{Name: increase.F("x"), DateOfBirth: increase.F(time.Now()), Address: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualAddress{Line1: increase.F("x"), Line2: increase.F("x"), City: increase.F("x"), State: increase.F("x"), Zip: increase.F("x")}), ConfirmedNoUsTaxID: increase.F(true), Identification: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentification{Method: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationMethodSocialSecurityNumber), Number: increase.F("xxxx"), Passport: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationPassport{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), Country: increase.F("x")}), DriversLicense: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationDriversLicense{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), State: increase.F("x")}), Other: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationOther{Country: increase.F("x"), Description: increase.F("x"), ExpirationDate: increase.F(time.Now()), FileID: increase.F("string")})})}), CompanyTitle: increase.F("x"), Prong: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersProngOwnership)}, {Individual: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividual{Name: increase.F("x"), DateOfBirth: increase.F(time.Now()), Address: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualAddress{Line1: increase.F("x"), Line2: increase.F("x"), City: increase.F("x"), State: increase.F("x"), Zip: increase.F("x")}), ConfirmedNoUsTaxID: increase.F(true), Identification: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentification{Method: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationMethodSocialSecurityNumber), Number: increase.F("xxxx"), Passport: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationPassport{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), Country: increase.F("x")}), DriversLicense: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationDriversLicense{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), State: increase.F("x")}), Other: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationOther{Country: increase.F("x"), Description: increase.F("x"), ExpirationDate: increase.F(time.Now()), FileID: increase.F("string")})})}), CompanyTitle: increase.F("x"), Prong: increase.F(requests.CreateAnEntityParametersCorporationBeneficialOwnersProngOwnership)}})}), NaturalPerson: increase.F(requests.CreateAnEntityParametersNaturalPerson{Name: increase.F("x"), DateOfBirth: increase.F(time.Now()), Address: increase.F(requests.CreateAnEntityParametersNaturalPersonAddress{Line1: increase.F("x"), Line2: increase.F("x"), City: increase.F("x"), State: increase.F("x"), Zip: increase.F("x")}), ConfirmedNoUsTaxID: increase.F(true), Identification: increase.F(requests.CreateAnEntityParametersNaturalPersonIdentification{Method: increase.F(requests.CreateAnEntityParametersNaturalPersonIdentificationMethodSocialSecurityNumber), Number: increase.F("xxxx"), Passport: increase.F(requests.CreateAnEntityParametersNaturalPersonIdentificationPassport{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), Country: increase.F("x")}), DriversLicense: increase.F(requests.CreateAnEntityParametersNaturalPersonIdentificationDriversLicense{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), State: increase.F("x")}), Other: increase.F(requests.CreateAnEntityParametersNaturalPersonIdentificationOther{Country: increase.F("x"), Description: increase.F("x"), ExpirationDate: increase.F(time.Now()), FileID: increase.F("string")})})}), Joint: increase.F(requests.CreateAnEntityParametersJoint{Name: increase.F("x"), Individuals: increase.F([]requests.CreateAnEntityParametersJointIndividuals{{Name: increase.F("x"), DateOfBirth: increase.F(time.Now()), Address: increase.F(requests.CreateAnEntityParametersJointIndividualsAddress{Line1: increase.F("x"), Line2: increase.F("x"), City: increase.F("x"), State: increase.F("x"), Zip: increase.F("x")}), ConfirmedNoUsTaxID: increase.F(true), Identification: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentification{Method: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentificationMethodSocialSecurityNumber), Number: increase.F("xxxx"), Passport: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentificationPassport{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), Country: increase.F("x")}), DriversLicense: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentificationDriversLicense{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), State: increase.F("x")}), Other: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentificationOther{Country: increase.F("x"), Description: increase.F("x"), ExpirationDate: increase.F(time.Now()), FileID: increase.F("string")})})}, {Name: increase.F("x"), DateOfBirth: increase.F(time.Now()), Address: increase.F(requests.CreateAnEntityParametersJointIndividualsAddress{Line1: increase.F("x"), Line2: increase.F("x"), City: increase.F("x"), State: increase.F("x"), Zip: increase.F("x")}), ConfirmedNoUsTaxID: increase.F(true), Identification: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentification{Method: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentificationMethodSocialSecurityNumber), Number: increase.F("xxxx"), Passport: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentificationPassport{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), Country: increase.F("x")}), DriversLicense: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentificationDriversLicense{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), State: increase.F("x")}), Other: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentificationOther{Country: increase.F("x"), Description: increase.F("x"), ExpirationDate: increase.F(time.Now()), FileID: increase.F("string")})})}, {Name: increase.F("x"), DateOfBirth: increase.F(time.Now()), Address: increase.F(requests.CreateAnEntityParametersJointIndividualsAddress{Line1: increase.F("x"), Line2: increase.F("x"), City: increase.F("x"), State: increase.F("x"), Zip: increase.F("x")}), ConfirmedNoUsTaxID: increase.F(true), Identification: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentification{Method: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentificationMethodSocialSecurityNumber), Number: increase.F("xxxx"), Passport: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentificationPassport{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), Country: increase.F("x")}), DriversLicense: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentificationDriversLicense{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), State: increase.F("x")}), Other: increase.F(requests.CreateAnEntityParametersJointIndividualsIdentificationOther{Country: increase.F("x"), Description: increase.F("x"), ExpirationDate: increase.F(time.Now()), FileID: increase.F("string")})})}})}), Trust: increase.F(requests.CreateAnEntityParametersTrust{Name: increase.F("x"), Category: increase.F(requests.CreateAnEntityParametersTrustCategoryRevocable), TaxIdentifier: increase.F("x"), FormationState: increase.F("x"), Address: increase.F(requests.CreateAnEntityParametersTrustAddress{Line1: increase.F("x"), Line2: increase.F("x"), City: increase.F("x"), State: increase.F("x"), Zip: increase.F("x")}), FormationDocumentFileID: increase.F("string"), Trustees: increase.F([]requests.CreateAnEntityParametersTrustTrustees{{Structure: increase.F(requests.CreateAnEntityParametersTrustTrusteesStructureIndividual), Individual: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividual{Name: increase.F("x"), DateOfBirth: increase.F(time.Now()), Address: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualAddress{Line1: increase.F("x"), Line2: increase.F("x"), City: increase.F("x"), State: increase.F("x"), Zip: increase.F("x")}), ConfirmedNoUsTaxID: increase.F(true), Identification: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentification{Method: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentificationMethodSocialSecurityNumber), Number: increase.F("xxxx"), Passport: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentificationPassport{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), Country: increase.F("x")}), DriversLicense: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentificationDriversLicense{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), State: increase.F("x")}), Other: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentificationOther{Country: increase.F("x"), Description: increase.F("x"), ExpirationDate: increase.F(time.Now()), FileID: increase.F("string")})})})}, {Structure: increase.F(requests.CreateAnEntityParametersTrustTrusteesStructureIndividual), Individual: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividual{Name: increase.F("x"), DateOfBirth: increase.F(time.Now()), Address: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualAddress{Line1: increase.F("x"), Line2: increase.F("x"), City: increase.F("x"), State: increase.F("x"), Zip: increase.F("x")}), ConfirmedNoUsTaxID: increase.F(true), Identification: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentification{Method: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentificationMethodSocialSecurityNumber), Number: increase.F("xxxx"), Passport: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentificationPassport{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), Country: increase.F("x")}), DriversLicense: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentificationDriversLicense{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), State: increase.F("x")}), Other: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentificationOther{Country: increase.F("x"), Description: increase.F("x"), ExpirationDate: increase.F(time.Now()), FileID: increase.F("string")})})})}, {Structure: increase.F(requests.CreateAnEntityParametersTrustTrusteesStructureIndividual), Individual: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividual{Name: increase.F("x"), DateOfBirth: increase.F(time.Now()), Address: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualAddress{Line1: increase.F("x"), Line2: increase.F("x"), City: increase.F("x"), State: increase.F("x"), Zip: increase.F("x")}), ConfirmedNoUsTaxID: increase.F(true), Identification: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentification{Method: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentificationMethodSocialSecurityNumber), Number: increase.F("xxxx"), Passport: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentificationPassport{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), Country: increase.F("x")}), DriversLicense: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentificationDriversLicense{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), State: increase.F("x")}), Other: increase.F(requests.CreateAnEntityParametersTrustTrusteesIndividualIdentificationOther{Country: increase.F("x"), Description: increase.F("x"), ExpirationDate: increase.F(time.Now()), FileID: increase.F("string")})})})}}), Grantor: increase.F(requests.CreateAnEntityParametersTrustGrantor{Name: increase.F("x"), DateOfBirth: increase.F(time.Now()), Address: increase.F(requests.CreateAnEntityParametersTrustGrantorAddress{Line1: increase.F("x"), Line2: increase.F("x"), City: increase.F("x"), State: increase.F("x"), Zip: increase.F("x")}), ConfirmedNoUsTaxID: increase.F(true), Identification: increase.F(requests.CreateAnEntityParametersTrustGrantorIdentification{Method: increase.F(requests.CreateAnEntityParametersTrustGrantorIdentificationMethodSocialSecurityNumber), Number: increase.F("xxxx"), Passport: increase.F(requests.CreateAnEntityParametersTrustGrantorIdentificationPassport{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), Country: increase.F("x")}), DriversLicense: increase.F(requests.CreateAnEntityParametersTrustGrantorIdentificationDriversLicense{FileID: increase.F("string"), ExpirationDate: increase.F(time.Now()), State: increase.F("x")}), Other: increase.F(requests.CreateAnEntityParametersTrustGrantorIdentificationOther{Country: increase.F("x"), Description: increase.F("x"), ExpirationDate: increase.F(time.Now()), FileID: increase.F("string")})})})}), Description: increase.F("x"), Relationship: increase.F(requests.CreateAnEntityParametersRelationshipAffiliated), SupplementalDocuments: increase.F([]requests.CreateAnEntityParametersSupplementalDocuments{{FileID: increase.F("string")}, {FileID: increase.F("string")}, {FileID: increase.F("string")}})})
	if err != nil {
		var apiError core.APIError
		if errors.As(err, &apiError) {
			body, _ := httputil.DumpRequest(apiError.Request(), true)
			println(string(body))
		}
		t.Fatalf("err should be nil: %s", err.Error())
	}
}

func TestEntitiesGet(t *testing.T) {
	c := increase.NewIncrease(options.WithAPIKey("APIKey"), options.WithBaseURL("http://127.0.0.1:4010"))
	_, err := c.Entities.Get(
		context.TODO(),
		"entity_n8y8tnk2p9339ti393yi",
	)
	if err != nil {
		var apiError core.APIError
		if errors.As(err, &apiError) {
			body, _ := httputil.DumpRequest(apiError.Request(), true)
			println(string(body))
		}
		t.Fatalf("err should be nil: %s", err.Error())
	}
}

func TestEntitiesListWithOptionalParams(t *testing.T) {
	c := increase.NewIncrease(options.WithAPIKey("APIKey"), options.WithBaseURL("http://127.0.0.1:4010"))
	_, err := c.Entities.List(context.TODO(), &requests.EntityListParams{Cursor: increase.F("string"), Limit: increase.F(int64(0))})
	if err != nil {
		var apiError core.APIError
		if errors.As(err, &apiError) {
			body, _ := httputil.DumpRequest(apiError.Request(), true)
			println(string(body))
		}
		t.Fatalf("err should be nil: %s", err.Error())
	}
}
