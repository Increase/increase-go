package services

import (
	"context"
	"increase"
	"increase/options"
	"increase/types"
	"testing"
)

func TestEntitiesNewWithOptionalParams(t *testing.T) {
	c := increase.NewIncrease(options.WithAPIKey("APIKey"), options.WithBaseURL("http://127.0.0.1:4010"))
	_, err := c.Entities.New(context.TODO(), &types.CreateAnEntityParameters{Structure: increase.P(types.CreateAnEntityParametersStructureCorporation), Corporation: &types.CreateAnEntityParametersCorporation{Name: increase.P("National Phonograph Company"), Website: increase.P("https://example.com"), TaxIdentifier: increase.P("602214076"), IncorporationState: increase.P("NY"), Address: &types.CreateAnEntityParametersCorporationAddress{Line1: increase.P("33 Liberty Street"), Line2: increase.P("x"), City: increase.P("New York"), State: increase.P("NY"), Zip: increase.P("10045")}, BeneficialOwners: &[]types.CreateAnEntityParametersCorporationBeneficialOwners{{Individual: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividual{Name: increase.P("x"), DateOfBirth: increase.P("2019-12-27"), Address: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualAddress{Line1: increase.P("x"), Line2: increase.P("x"), City: increase.P("x"), State: increase.P("x"), Zip: increase.P("x")}, ConfirmedNoUsTaxID: increase.P(true), Identification: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentification{Method: increase.P(types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationMethodSocialSecurityNumber), Number: increase.P("x"), Passport: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationPassport{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), Country: increase.P("x")}, DriversLicense: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationDriversLicense{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), State: increase.P("x")}, Other: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationOther{Country: increase.P("x"), Description: increase.P("x"), ExpirationDate: increase.P("2019-12-27"), FileID: increase.P("string")}}}, CompanyTitle: increase.P("x"), Prong: increase.P(types.CreateAnEntityParametersCorporationBeneficialOwnersProngOwnership)}, {Individual: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividual{Name: increase.P("x"), DateOfBirth: increase.P("2019-12-27"), Address: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualAddress{Line1: increase.P("x"), Line2: increase.P("x"), City: increase.P("x"), State: increase.P("x"), Zip: increase.P("x")}, ConfirmedNoUsTaxID: increase.P(true), Identification: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentification{Method: increase.P(types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationMethodSocialSecurityNumber), Number: increase.P("x"), Passport: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationPassport{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), Country: increase.P("x")}, DriversLicense: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationDriversLicense{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), State: increase.P("x")}, Other: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationOther{Country: increase.P("x"), Description: increase.P("x"), ExpirationDate: increase.P("2019-12-27"), FileID: increase.P("string")}}}, CompanyTitle: increase.P("x"), Prong: increase.P(types.CreateAnEntityParametersCorporationBeneficialOwnersProngOwnership)}, {Individual: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividual{Name: increase.P("x"), DateOfBirth: increase.P("2019-12-27"), Address: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualAddress{Line1: increase.P("x"), Line2: increase.P("x"), City: increase.P("x"), State: increase.P("x"), Zip: increase.P("x")}, ConfirmedNoUsTaxID: increase.P(true), Identification: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentification{Method: increase.P(types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationMethodSocialSecurityNumber), Number: increase.P("x"), Passport: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationPassport{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), Country: increase.P("x")}, DriversLicense: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationDriversLicense{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), State: increase.P("x")}, Other: &types.CreateAnEntityParametersCorporationBeneficialOwnersIndividualIdentificationOther{Country: increase.P("x"), Description: increase.P("x"), ExpirationDate: increase.P("2019-12-27"), FileID: increase.P("string")}}}, CompanyTitle: increase.P("x"), Prong: increase.P(types.CreateAnEntityParametersCorporationBeneficialOwnersProngOwnership)}}}, NaturalPerson: &types.CreateAnEntityParametersNaturalPerson{Name: increase.P("x"), DateOfBirth: increase.P("2019-12-27"), Address: &types.CreateAnEntityParametersNaturalPersonAddress{Line1: increase.P("x"), Line2: increase.P("x"), City: increase.P("x"), State: increase.P("x"), Zip: increase.P("x")}, ConfirmedNoUsTaxID: increase.P(true), Identification: &types.CreateAnEntityParametersNaturalPersonIdentification{Method: increase.P(types.CreateAnEntityParametersNaturalPersonIdentificationMethodSocialSecurityNumber), Number: increase.P("x"), Passport: &types.CreateAnEntityParametersNaturalPersonIdentificationPassport{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), Country: increase.P("x")}, DriversLicense: &types.CreateAnEntityParametersNaturalPersonIdentificationDriversLicense{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), State: increase.P("x")}, Other: &types.CreateAnEntityParametersNaturalPersonIdentificationOther{Country: increase.P("x"), Description: increase.P("x"), ExpirationDate: increase.P("2019-12-27"), FileID: increase.P("string")}}}, Joint: &types.CreateAnEntityParametersJoint{Name: increase.P("x"), Individuals: &[]types.CreateAnEntityParametersJointIndividuals{{Name: increase.P("x"), DateOfBirth: increase.P("2019-12-27"), Address: &types.CreateAnEntityParametersJointIndividualsAddress{Line1: increase.P("x"), Line2: increase.P("x"), City: increase.P("x"), State: increase.P("x"), Zip: increase.P("x")}, ConfirmedNoUsTaxID: increase.P(true), Identification: &types.CreateAnEntityParametersJointIndividualsIdentification{Method: increase.P(types.CreateAnEntityParametersJointIndividualsIdentificationMethodSocialSecurityNumber), Number: increase.P("x"), Passport: &types.CreateAnEntityParametersJointIndividualsIdentificationPassport{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), Country: increase.P("x")}, DriversLicense: &types.CreateAnEntityParametersJointIndividualsIdentificationDriversLicense{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), State: increase.P("x")}, Other: &types.CreateAnEntityParametersJointIndividualsIdentificationOther{Country: increase.P("x"), Description: increase.P("x"), ExpirationDate: increase.P("2019-12-27"), FileID: increase.P("string")}}}, {Name: increase.P("x"), DateOfBirth: increase.P("2019-12-27"), Address: &types.CreateAnEntityParametersJointIndividualsAddress{Line1: increase.P("x"), Line2: increase.P("x"), City: increase.P("x"), State: increase.P("x"), Zip: increase.P("x")}, ConfirmedNoUsTaxID: increase.P(true), Identification: &types.CreateAnEntityParametersJointIndividualsIdentification{Method: increase.P(types.CreateAnEntityParametersJointIndividualsIdentificationMethodSocialSecurityNumber), Number: increase.P("x"), Passport: &types.CreateAnEntityParametersJointIndividualsIdentificationPassport{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), Country: increase.P("x")}, DriversLicense: &types.CreateAnEntityParametersJointIndividualsIdentificationDriversLicense{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), State: increase.P("x")}, Other: &types.CreateAnEntityParametersJointIndividualsIdentificationOther{Country: increase.P("x"), Description: increase.P("x"), ExpirationDate: increase.P("2019-12-27"), FileID: increase.P("string")}}}, {Name: increase.P("x"), DateOfBirth: increase.P("2019-12-27"), Address: &types.CreateAnEntityParametersJointIndividualsAddress{Line1: increase.P("x"), Line2: increase.P("x"), City: increase.P("x"), State: increase.P("x"), Zip: increase.P("x")}, ConfirmedNoUsTaxID: increase.P(true), Identification: &types.CreateAnEntityParametersJointIndividualsIdentification{Method: increase.P(types.CreateAnEntityParametersJointIndividualsIdentificationMethodSocialSecurityNumber), Number: increase.P("x"), Passport: &types.CreateAnEntityParametersJointIndividualsIdentificationPassport{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), Country: increase.P("x")}, DriversLicense: &types.CreateAnEntityParametersJointIndividualsIdentificationDriversLicense{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), State: increase.P("x")}, Other: &types.CreateAnEntityParametersJointIndividualsIdentificationOther{Country: increase.P("x"), Description: increase.P("x"), ExpirationDate: increase.P("2019-12-27"), FileID: increase.P("string")}}}}}, Trust: &types.CreateAnEntityParametersTrust{Name: increase.P("x"), Category: increase.P(types.CreateAnEntityParametersTrustCategoryRevocable), TaxIdentifier: increase.P("x"), FormationState: increase.P("x"), Address: &types.CreateAnEntityParametersTrustAddress{Line1: increase.P("x"), Line2: increase.P("x"), City: increase.P("x"), State: increase.P("x"), Zip: increase.P("x")}, FormationDocumentFileID: increase.P("string"), Trustees: &[]types.CreateAnEntityParametersTrustTrustees{{Structure: increase.P(types.CreateAnEntityParametersTrustTrusteesStructureIndividual), Individual: &types.CreateAnEntityParametersTrustTrusteesIndividual{Name: increase.P("x"), DateOfBirth: increase.P("2019-12-27"), Address: &types.CreateAnEntityParametersTrustTrusteesIndividualAddress{Line1: increase.P("x"), Line2: increase.P("x"), City: increase.P("x"), State: increase.P("x"), Zip: increase.P("x")}, ConfirmedNoUsTaxID: increase.P(true), Identification: &types.CreateAnEntityParametersTrustTrusteesIndividualIdentification{Method: increase.P(types.CreateAnEntityParametersTrustTrusteesIndividualIdentificationMethodSocialSecurityNumber), Number: increase.P("x"), Passport: &types.CreateAnEntityParametersTrustTrusteesIndividualIdentificationPassport{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), Country: increase.P("x")}, DriversLicense: &types.CreateAnEntityParametersTrustTrusteesIndividualIdentificationDriversLicense{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), State: increase.P("x")}, Other: &types.CreateAnEntityParametersTrustTrusteesIndividualIdentificationOther{Country: increase.P("x"), Description: increase.P("x"), ExpirationDate: increase.P("2019-12-27"), FileID: increase.P("string")}}}}, {Structure: increase.P(types.CreateAnEntityParametersTrustTrusteesStructureIndividual), Individual: &types.CreateAnEntityParametersTrustTrusteesIndividual{Name: increase.P("x"), DateOfBirth: increase.P("2019-12-27"), Address: &types.CreateAnEntityParametersTrustTrusteesIndividualAddress{Line1: increase.P("x"), Line2: increase.P("x"), City: increase.P("x"), State: increase.P("x"), Zip: increase.P("x")}, ConfirmedNoUsTaxID: increase.P(true), Identification: &types.CreateAnEntityParametersTrustTrusteesIndividualIdentification{Method: increase.P(types.CreateAnEntityParametersTrustTrusteesIndividualIdentificationMethodSocialSecurityNumber), Number: increase.P("x"), Passport: &types.CreateAnEntityParametersTrustTrusteesIndividualIdentificationPassport{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), Country: increase.P("x")}, DriversLicense: &types.CreateAnEntityParametersTrustTrusteesIndividualIdentificationDriversLicense{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), State: increase.P("x")}, Other: &types.CreateAnEntityParametersTrustTrusteesIndividualIdentificationOther{Country: increase.P("x"), Description: increase.P("x"), ExpirationDate: increase.P("2019-12-27"), FileID: increase.P("string")}}}}, {Structure: increase.P(types.CreateAnEntityParametersTrustTrusteesStructureIndividual), Individual: &types.CreateAnEntityParametersTrustTrusteesIndividual{Name: increase.P("x"), DateOfBirth: increase.P("2019-12-27"), Address: &types.CreateAnEntityParametersTrustTrusteesIndividualAddress{Line1: increase.P("x"), Line2: increase.P("x"), City: increase.P("x"), State: increase.P("x"), Zip: increase.P("x")}, ConfirmedNoUsTaxID: increase.P(true), Identification: &types.CreateAnEntityParametersTrustTrusteesIndividualIdentification{Method: increase.P(types.CreateAnEntityParametersTrustTrusteesIndividualIdentificationMethodSocialSecurityNumber), Number: increase.P("x"), Passport: &types.CreateAnEntityParametersTrustTrusteesIndividualIdentificationPassport{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), Country: increase.P("x")}, DriversLicense: &types.CreateAnEntityParametersTrustTrusteesIndividualIdentificationDriversLicense{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), State: increase.P("x")}, Other: &types.CreateAnEntityParametersTrustTrusteesIndividualIdentificationOther{Country: increase.P("x"), Description: increase.P("x"), ExpirationDate: increase.P("2019-12-27"), FileID: increase.P("string")}}}}}, Grantor: &types.CreateAnEntityParametersTrustGrantor{Name: increase.P("x"), DateOfBirth: increase.P("2019-12-27"), Address: &types.CreateAnEntityParametersTrustGrantorAddress{Line1: increase.P("x"), Line2: increase.P("x"), City: increase.P("x"), State: increase.P("x"), Zip: increase.P("x")}, ConfirmedNoUsTaxID: increase.P(true), Identification: &types.CreateAnEntityParametersTrustGrantorIdentification{Method: increase.P(types.CreateAnEntityParametersTrustGrantorIdentificationMethodSocialSecurityNumber), Number: increase.P("x"), Passport: &types.CreateAnEntityParametersTrustGrantorIdentificationPassport{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), Country: increase.P("x")}, DriversLicense: &types.CreateAnEntityParametersTrustGrantorIdentificationDriversLicense{FileID: increase.P("string"), ExpirationDate: increase.P("2019-12-27"), State: increase.P("x")}, Other: &types.CreateAnEntityParametersTrustGrantorIdentificationOther{Country: increase.P("x"), Description: increase.P("x"), ExpirationDate: increase.P("2019-12-27"), FileID: increase.P("string")}}}}, Description: increase.P("x"), Relationship: increase.P(types.CreateAnEntityParametersRelationshipAffiliated), SupplementalDocuments: &[]types.CreateAnEntityParametersSupplementalDocuments{{FileID: increase.P("string")}, {FileID: increase.P("string")}, {FileID: increase.P("string")}}})
	if err != nil {
		t.Fatal("err should be nil", err)
	}
}

func TestEntitiesGet(t *testing.T) {
	c := increase.NewIncrease(options.WithAPIKey("APIKey"), options.WithBaseURL("http://127.0.0.1:4010"))
	_, err := c.Entities.Get(context.TODO(), "entity_n8y8tnk2p9339ti393yi")
	if err != nil {
		t.Fatal("err should be nil", err)
	}
}

func TestEntitiesListWithOptionalParams(t *testing.T) {
	c := increase.NewIncrease(options.WithAPIKey("APIKey"), options.WithBaseURL("http://127.0.0.1:4010"))
	_, err := c.Entities.List(context.TODO(), &types.EntityListParams{Cursor: increase.P("string"), Limit: increase.P(int64(0))})
	if err != nil {
		t.Fatal("err should be nil", err)
	}
}
